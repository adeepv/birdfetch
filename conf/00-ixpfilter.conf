##
## Standard IXP community filter
##

function ixp_community_filter(int peerasn)
{
        if !(source = RTS_BGP) then
                return false;

        # default community filtering schema doesn't support ASN32, as there
        # are only 6 octets available for numbering.  We need
        # draft-raszuk-wide-bgp-communities to become reality.

        if peerasn > 65535 then
                return true;

        # Implement widely used community filtering schema.
        if (0, peerasn) ~ bgp_community then 
		{
	                return false;
		}
        if (routeserverasn, peerasn) ~ bgp_community then
		{
			bgp_community=[ (45004,1000) ];
	                return true;
		}
        if (0, routeserverasn) ~ bgp_community then
		{
	                return false;
		}

        return true;
}


# This function excludes weird networks
#  rfc1918, class D, class E, too long and too short prefixes
function avoid_martians()
prefix set martians;
{
        martians = [
                10.0.0.0/8+,
                169.254.0.0/16+,
                172.16.0.0/12+,
                192.0.0.0/24+,
                192.0.2.0/24+,
                192.168.0.0/16+,
                198.18.0.0/15+,
                198.51.100.0/24+,
                203.0.113.0/24+,
                224.0.0.0/4+,
                240.0.0.0/4+,
                0.0.0.0/32-,
                0.0.0.0/0{25,32},
                0.0.0.0/0{0,7}
        ];

        # Avoid RFC1918 and similar networks
        if net ~ martians then
                return false;

        return true;
}
